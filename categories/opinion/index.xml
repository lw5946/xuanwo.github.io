<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Opinion on Xuanwo&#39;s Blog</title>
    <link>https://xuanwo.org/categories/opinion/</link>
    <description>Recent content in Opinion on Xuanwo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 08 Apr 2018 16:07:00 +0000</lastBuildDate>
    
	<atom:link href="https://xuanwo.org/categories/opinion/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo RSS 配置输出全文</title>
      <link>https://xuanwo.org/2018/04/08/hugo-rss-output-all-content/</link>
      <pubDate>Sun, 08 Apr 2018 16:07:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2018/04/08/hugo-rss-output-all-content/</guid>
      <description>&lt;p&gt;在折腾 Feedly 的时候偶然发现自己的博客输出的 RSS 里面只有摘要，想要看完整的内容需要跳转。这可不符合我的初衷，于是花了一些时间配置了一下相关的内容。接下来简要的介绍一下如何配置 Hugo 的模板以生成输出全文的 RSS Feed。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>基于 AWS Lambda 实现自动化</title>
      <link>https://xuanwo.org/2018/01/14/automation-based-on-aws-lambda/</link>
      <pubDate>Sun, 14 Jan 2018 10:07:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2018/01/14/automation-based-on-aws-lambda/</guid>
      <description>&lt;p&gt;在上一篇文章中我们介绍了 &lt;a href=&#34;https://xuanwo.org/2017/12/03/integromat-intro/&#34;&gt;Integrmat&lt;/a&gt; 这个自动化平台，但是在实际的应用当中，它还是有一些不太符合我们项目需求的地方。基于 AWS Lambda 实现的自动化工具就是我们找到的替代方案，接下来我会将阐述一下项目的需求，然后根据对项目的需求分析为什么 Integrmat 不适合以及基于 AWS Lambda 实现的好处在哪里。之后会介绍一下 AWS Lambda 是什么以及如何实现我们的自动化工具，并分享一些在实现自动化工具中遇到的一些坑。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Integromat -- 最强大的自动化平台</title>
      <link>https://xuanwo.org/2017/12/03/integromat-intro/</link>
      <pubDate>Sun, 03 Dec 2017 10:07:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2017/12/03/integromat-intro/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://xuanwo.org/imgs/opinion/integromat-example.png&#34; alt=&#34;Integrmat Example&#34; /&gt;&lt;/p&gt;

&lt;p&gt;今天想跟大家分享一个类似于 IFTTT 的自动化平台： &lt;a href=&#34;https://www.integromat.com&#34;&gt;Integromat&lt;/a&gt;。与 IFTTT 最大的区别是它允许用户通过操作每一次请求的输入和输出来构建一个完整的链条，比如上图的这个例子就是实现了这样的一个功能：当完成 Todoist 中带有指定属性的任务时，将这个任务移动到 &lt;code&gt;Done&lt;/code&gt; 列表，并将其放到 &lt;code&gt;Done&lt;/code&gt; 列表的顶端。&lt;/p&gt;

&lt;p&gt;接下来我会先简单地介绍一下 Integromat，然后讲解一下 Integromat 涉及到的一些元素，最后讲讲如何定制并调试自己的场景。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Enpass —— 超赞的密码管理工具</title>
      <link>https://xuanwo.org/2017/11/26/enpass-intro/</link>
      <pubDate>Sun, 26 Nov 2017 10:07:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2017/11/26/enpass-intro/</guid>
      <description>&lt;p&gt;不想把自己的密码保存在 LastPass 的服务器上？羡慕 Mac 上好用的 1Password 但是自己的平台上却没有？不喜欢 Linux 密码管理工具过时的界面？ 如果你也曾经为这些问题苦恼过的话，那 &lt;a href=&#34;https://www.enpass.io/&#34;&gt;Enpass&lt;/a&gt; 就有可能是你的最佳之选。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>再见， Hexo</title>
      <link>https://xuanwo.org/2016/10/23/goodbye-hexo/</link>
      <pubDate>Sun, 23 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2016/10/23/goodbye-hexo/</guid>
      <description>&lt;p&gt;其实我现在的心情比较复杂。
Hexo 我从大一的暑假就开始用，大二的时候加入了 Hexo 的团队，一直到现在，关于 Hexo 的文章都是我博客点击率最高的文章。
但是由于我实在是精力有限，没有时间去维护Hexo的相关项目，因此只能与Hexo说再见了，希望能有更多人可以加入Hexo的开发团队，希望Hexo能够发展的更好。
下面简单地分享一下自己在Hexo团队中做的工作和学到的东西。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在QingCloud上部署弹性扩容的OwnCloud</title>
      <link>https://xuanwo.org/2016/06/03/owncloud-on-qingcloud/</link>
      <pubDate>Fri, 03 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2016/06/03/owncloud-on-qingcloud/</guid>
      <description>&lt;p&gt;因为实在不满意百度云的一些缺陷，我们最终决定部署一套团队内部使用的云存储平台，用于团队协作及资料长期存储。希望能够达到如下目标：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;数据安全性高&lt;/li&gt;
&lt;li&gt;权限控制能力强&lt;/li&gt;
&lt;li&gt;分享功能更强，可以设置密码和过期时间等&lt;/li&gt;
&lt;li&gt;允许匿名第三方上传数据&lt;/li&gt;
&lt;li&gt;没有文件上传大小限制&lt;/li&gt;
&lt;li&gt;支持多平台同步功能&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;综合考量各开源项目之后，我最终选定基于QingCloud部署一套开源存储项目OwnCloud。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>微信群重复人员识别</title>
      <link>https://xuanwo.org/2016/02/28/wechat-remove/</link>
      <pubDate>Sun, 28 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2016/02/28/wechat-remove/</guid>
      <description>&lt;p&gt;由于微信的限制，人数超过一百以后，只有邀请才能加入。所以，如果想要组织大型的在线活动，就只有建立很多个分群。然而分群的问题在于，会有很多人重复加群，挤占了本来就缺乏的空间。所以需要找到一个可行的办法，清除两个群中的重复人员。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>北地网费新政策下的生存攻略</title>
      <link>https://xuanwo.org/2016/02/17/ipv6-in-cugb/</link>
      <pubDate>Wed, 17 Feb 2016 18:59:02 +0000</pubDate>
      
      <guid>https://xuanwo.org/2016/02/17/ipv6-in-cugb/</guid>
      <description>&lt;p&gt;主旨只有两条：开源，节流&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chocolatey——Windows下的包管理工具</title>
      <link>https://xuanwo.org/2016/02/15/chocolatey-intro/</link>
      <pubDate>Mon, 15 Feb 2016 20:15:46 +0000</pubDate>
      
      <guid>https://xuanwo.org/2016/02/15/chocolatey-intro/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt;是一个基于Nuget的Windows包管理工具，截止到我更新此文章的时候，一共有3.7k多个独立包。本文旨在介绍Chocolatey这一工具的安装和用法，希望能有更多人享受到该工具的便利之处。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解放你的智能电视</title>
      <link>https://xuanwo.org/2016/02/04/unlock-your-smart-tv/</link>
      <pubDate>Thu, 04 Feb 2016 23:12:52 +0000</pubDate>
      
      <guid>https://xuanwo.org/2016/02/04/unlock-your-smart-tv/</guid>
      <description>&lt;p&gt;现在很多人都买了智能电视，但是出于种种你懂得原因，厂商通常都不允许用户自行安装自己想要的APP，比如腾讯视频，优酷视频之类的。本教程旨在突破这些限制，彻底解放智能电视的全部潜力。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>最佳跨平台PDF阅读解决方案</title>
      <link>https://xuanwo.org/2015/12/23/best-pdf-read-solution/</link>
      <pubDate>Wed, 23 Dec 2015 16:15:20 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/12/23/best-pdf-read-solution/</guid>
      <description>&lt;p&gt;最近因为学习需要，要大量阅读纯文字的PDF文档。然后我惊讶地发现市场上居然没有哪家提供一套完整可用的跨平台PDF阅读解决方案，于是我在尝试了市面几乎所有叫得上名字的各类阅读器之后，形成了一套自己的跨平台PDF阅读解决方案。本文记录了这套方案的详细内容，希望会有所益处。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在线视频下载完整解决方案</title>
      <link>https://xuanwo.org/2015/12/18/online-video-download-solution/</link>
      <pubDate>Fri, 18 Dec 2015 12:49:49 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/12/18/online-video-download-solution/</guid>
      <description>&lt;p&gt;因为学习需要，产生了一个这样的需求：要从Youtube上批量下载视频。自然，出于方便使用的角度来看，音画不能分离，最好带有对应的字幕。一番搜罗之后，我找到了基于Python的开源产品： &lt;a href=&#34;https://rg3.github.io/youtube-dl/&#34;&gt;youtube-dl&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;值得一提的是，youtube-dl不仅仅能下载youtube上的视频，它支持的视频链接种类多达700+种，几乎囊括了所有在线视频网站，列表参见&lt;a href=&#34;https://rg3.github.io/youtube-dl/supportedsites.html&#34;&gt;此处&lt;/a&gt;。让我不由得感慨开源的力量。除此以外，某些不存在的网址需要自备梯子，不再赘述。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>文本转换神器——Pandoc</title>
      <link>https://xuanwo.org/2015/11/14/pandoc/</link>
      <pubDate>Sat, 14 Nov 2015 14:29:18 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/11/14/pandoc/</guid>
      <description>&lt;h1 id=&#34;介绍&#34;&gt;介绍&lt;/h1&gt;

&lt;p&gt;Pandoc是一个用haskell编写的文本转换工具，小巧迅速且支持格式广泛，堪称文本转换应用的瑞士军刀。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>正则表达式参考手册</title>
      <link>https://xuanwo.org/2015/10/29/regex/</link>
      <pubDate>Thu, 29 Oct 2015 16:26:47 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/10/29/regex/</guid>
      <description>&lt;p&gt;一直都知道正则表达式的强大，但是总是觉得正则很难学不会，所以一直不得要领。这次因为工作原因，不得不用到正则，于是顺手将它学了起来。入门之后才发现，花费一点时间学习一下正则非常值得，可以成千上百倍地提升你的工作效率。特别是当你经常和批量数据以及规则文本打交道的时候，你会发现完全离不开正则。闲话到此为止，下面进入正题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hash以及Hash校验工具介绍</title>
      <link>https://xuanwo.org/2015/10/28/hashsum/</link>
      <pubDate>Wed, 28 Oct 2015 11:14:56 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/10/28/hashsum/</guid>
      <description>&lt;p&gt;前一阵子的Xcodeghost事件给所有人都好好的上了一课——校验的重要性。无论何时，一定要校验！一定要校验！！一定要校验！！！重要的事情重复三遍总是没错的。如果真的无法做到这一点，最起码这些一定要注意：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;系统镜像&lt;/li&gt;
&lt;li&gt;底层开发工具&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;选择官方认证的软件源，地址尽可能地使用HTTPS而非HTTP以避免缓存影响&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vagrant——构建虚拟开发环境的新思路</title>
      <link>https://xuanwo.org/2015/10/22/vagrant-intro/</link>
      <pubDate>Thu, 22 Oct 2015 09:24:57 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/10/22/vagrant-intro/</guid>
      <description>&lt;p&gt;说到虚拟开发环境，人人都觉得好，但是在实际应用中，人们还是在一台电脑上配置所有用到的环境。究其原因，还是因为搭建虚拟开发环境的过程不比在实体机上配置更简单。但是，Vagrant出现了。Vagrant抹平了不同的虚拟化软件的差异，以统一的命令取而代之；抛弃了传统的系统镜像分发安装方式，以直接封装好的虚拟磁盘代替。除此以外，还提供了各种已经封装好的环境下载，搭建一个虚拟开发环境的便利程度有了大幅提高。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>低成本搭建谷歌镜像</title>
      <link>https://xuanwo.org/2015/10/12/7ghost-google/</link>
      <pubDate>Mon, 12 Oct 2015 16:53:25 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/10/12/7ghost-google/</guid>
      <description>&lt;p&gt;尽管自己已经搭建好了Shadowsocks等翻墙工具，但是总有一些时刻需要临时地使用Google查看一些网页，这个时候一个可用的谷歌镜像就显得很重要。本文旨在使用低成本方案来搭建一个可用的谷歌镜像服务，用以部分解决这个问题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>微信公众平台数据抓取解决方案</title>
      <link>https://xuanwo.org/2015/09/30/wechat-mp-data-spider/</link>
      <pubDate>Wed, 30 Sep 2015 10:12:58 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/09/30/wechat-mp-data-spider/</guid>
      <description>&lt;p&gt;有一个需求是将微信公众平台的数据导出到Excel以进行后续的数据分析。在关注人数等数据上，微信已经提供了Excel导出的接口，但是在图文分析上，尽管有很详细的数据提供，却没有提供一个好的导出接口。所以我需要寻求一个简单的方案来抓取微信公众平台的图文分析数据。&lt;/p&gt;

&lt;h1 id=&#34;分析&#34;&gt;分析&lt;/h1&gt;

&lt;p&gt;图文分析页面是JS加载的，通过后台提交返回数据，然后使用JS渲染生成页面。对着页面分析了一会儿，没有发现比较简单的请求构造方式，但是发现微信给出的数据形式非常有规律，可以采用正则来获取我想要的信息。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>多页批量规则数据抓取解决方案</title>
      <link>https://xuanwo.org/2015/09/24/multi-page-data-spider/</link>
      <pubDate>Thu, 24 Sep 2015 08:04:13 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/09/24/multi-page-data-spider/</guid>
      <description>&lt;p&gt;最近完成的一个工作是要抓取某公司的合作伙伴信息，跟上一次的区别在于，这个公司调用了Salesforce之类的第三方CRM服务。合作伙伴的详细信息是需要点开对应的连接之后才可以获得。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>单页批量规则数据抓取解决方案</title>
      <link>https://xuanwo.org/2015/09/22/single-page-data-spider/</link>
      <pubDate>Tue, 22 Sep 2015 09:07:22 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/09/22/single-page-data-spider/</guid>
      <description>&lt;p&gt;加入青云后接的第一个活儿是抓取某公司的经销商的全部信息。该公司通过一个动态页面来展示经销商信息，使用后台的POST提交请求数据，并使用JS在页面下方加载请求的经销商信息，而且网址不会发生变化。&lt;/p&gt;

&lt;h1 id=&#34;分析&#34;&gt;分析&lt;/h1&gt;

&lt;p&gt;接到活儿时候还在上课，电脑不在身边，就用手机先看了看页面。每一条数据都不出意外地非常有规律。观察辣个公司的页面源代码，看得头晕脑胀（只有一个萌萌的员工写的一句&lt;code&gt;别删我&lt;/code&gt;让我傻乐了一会儿），无收获。没有办法使用BeautifulSoup，也不会用py来模拟用户的操作，我只好另辟蹊径了。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>译-Ubuntu下五个最好的BT客户端</title>
      <link>https://xuanwo.org/2015/09/01/translated-five-best-bt-client-in-ubuntu/</link>
      <pubDate>Tue, 01 Sep 2015 10:54:20 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/09/01/translated-five-best-bt-client-in-ubuntu/</guid>
      <description>&lt;p&gt;&lt;em&gt;本文是我加入LCTT后翻译的第一篇文章，感谢LCTT项目组伙伴们的支持，感谢组长wxy的仔细校对，也欢迎大家加入LCTT项目，共同翻译优质的Linux文章~&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://xuanwo.org/imgs/opinion/5_Best_Torrent_Ubuntu.png&#34; alt=&#34;Best Torrent clients for Ubuntu Linux&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在寻找 &lt;strong&gt;Ubuntu 中最好的 BT 客户端&lt;/strong&gt;吗？事实上，Linux 桌面平台中有许多 BT 客户端，但是它们中的哪些才是&lt;strong&gt;最好的 Ubuntu 客户端&lt;/strong&gt;呢？&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Markdown &#43; Travis CI 构建自己的开源电子书</title>
      <link>https://xuanwo.org/2015/08/12/opensourcebook/</link>
      <pubDate>Wed, 12 Aug 2015 01:31:22 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/08/12/opensourcebook/</guid>
      <description>&lt;p&gt;作为一只ACMer，一个非常现实的需求就是我们需要准备自己的模板。在我的想象当中，我们的模板应当有如下的这些特性：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;可以生成PDF格式，保证在多个平台下的一致性&lt;/li&gt;
&lt;li&gt;编辑起来比较简单，我的队友无需学习LaTeX即可开始编辑&lt;/li&gt;
&lt;li&gt;共同协作比较方便，我和队友无需将代码互相复制粘贴&lt;/li&gt;
&lt;li&gt;代码必须要支持高亮！（很重要！）&lt;/li&gt;
&lt;li&gt;代码编辑容易，因为我们的模板白手起家，经常会需要修改。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这些需求，单个实现都比较容易，但是如果想要找到一个全部符合并且简单易行的方案，就有些困难了。在&lt;a href=&#34;http://www.larrycaiyu.com/&#34;&gt;@larrycai&lt;/a&gt;推出的&lt;a href=&#34;https://github.com/larrycai/kaiyuanbook&#34;&gt;中文开源电子书项目&lt;/a&gt;的启发下，我想到了使用 &lt;code&gt;Markdown&lt;/code&gt; + &lt;code&gt;Github&lt;/code&gt; + &lt;code&gt;Travis CI&lt;/code&gt; 的一套工具链来构建了我的开源电子书的方法。
下面我来简单地介绍一下。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>史上最详细的虚拟机安装Mac OS X图文教程</title>
      <link>https://xuanwo.org/2015/08/09/vmware-mac-os-x-intro/</link>
      <pubDate>Sun, 09 Aug 2015 01:30:51 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/08/09/vmware-mac-os-x-intro/</guid>
      <description>&lt;p&gt;最近在电脑上配置了VMware，想要搭建一个Mac OS X的虚拟机以供体验。不过网上的资料过于老旧，版本更新不及时，导致我在配置的过程中遇到了无数的坑，折腾了一个晚上才配置成功。事后我总结了相关的经验和实践完成了这份教程，希望能够对大家有所益处~&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Update:
因为要用到&lt;a href=&#34;https://xuanwo.org/2015/10/22/vagrant-intro/&#34;&gt;Vagrant&lt;/a&gt;，所以又捣鼓了一番在VirtualBox上安装Mac OS X，同样踩了不少坑，相关的总结如下。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Listary——让文件在指尖流动</title>
      <link>https://xuanwo.org/2015/07/28/listary/</link>
      <pubDate>Tue, 28 Jul 2015 21:48:32 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/07/28/listary/</guid>
      <description>&lt;p&gt;今天想为大家介绍的是我使用了两年的神器——&lt;a href=&#34;http://www.listary.com/&#34;&gt;Listary&lt;/a&gt;，作为一款Windows文件浏览增强工具，它为Windows自带的资源管理器添加了很多实用的功能，包括智能命令、最近文档以及收藏功能。与此同时，它还能与很多第三方应用集成，包括鼎鼎大名的Total Commander，还有WinRAR，7zip，FileZilla等等。
值得一提的是，Listary由国人Channing开发，默认添加了简体中文支持，是不可多得的精品，典型的墙内开花墙外香的典范。可能是由于国人还并不是非常重视效率这个方面，感觉使用Listary的主要人群还是集中在国外，从Listary的论坛上也能看得出来。所以我完成了这样一篇文章，希望我也能为这样的精品应用在国内的推广做出些贡献。
恩？说我是水军？唔，谁说我不是呢？
&lt;em&gt;官网上的广告语&lt;code&gt;Keep files at your fingertips&lt;/code&gt;被我翻译成了&lt;code&gt;让文件在指尖流动&lt;/code&gt;，不知道Channing会怎么想~&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Teambition团队协作实践</title>
      <link>https://xuanwo.org/2015/07/02/teambition-work/</link>
      <pubDate>Thu, 02 Jul 2015 19:08:55 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/07/02/teambition-work/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://xuanwo.org/2015/06/30/together-project/&#34;&gt;Together&lt;/a&gt;团队组建完成后，一个现实的问题在于：我们怎么样进行协作。经过一番筛选之后，我选中了Teambition，一个简约但是够用的团队协作平台。我们团队围绕着我们的需求，基于Teambition建立了我们自己的协作平台。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Screen管理会话</title>
      <link>https://xuanwo.org/2015/07/01/screen-ssh/</link>
      <pubDate>Wed, 01 Jul 2015 09:49:31 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/07/01/screen-ssh/</guid>
      <description>&lt;p&gt;在实现&lt;a href=&#34;http://xuanwo.org/2015/06/30/together-project/&#34;&gt;Together项目&lt;/a&gt;的过程中，有一个需求是需要下载一个500M左右系统镜像包，由于文件源在国内，国外的下载速度简直感人。在经历多次因为SSH超时导致下载意外终止后，我终于决定要解决掉这个问题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>史上最详细的Hexo博客搭建图文教程</title>
      <link>https://xuanwo.org/2015/03/26/hexo-intor/</link>
      <pubDate>Thu, 26 Mar 2015 00:22:43 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/03/26/hexo-intor/</guid>
      <description>&lt;p&gt;从2014年的八月份开始接触Hexo，一直用到现在，已经有半年的时间了。这期间，Hexo从2.X一路升级到了3.0，很多地方都发生了改变。不仅如此，很多原来使用Hexo的博主们写下了的教程并没有及时更新，导致后来人一头雾水，挫折感十足。因此，本文致力于提供一份足够简单，长期维护的基于Github Pages的Hexo博客搭建图文教程，希望能有所帮助。
当然，我个人的力量是有限的，因此也希望使用Hexo的大家也能一起行动起来，通过&lt;a href=&#34;https://github.com/Xuanwo/xuanwo.github.io/pulls&#34;&gt;提交PR&lt;/a&gt;，&lt;a href=&#34;https://github.com/Xuanwo/xuanwo.github.io/issues&#34;&gt;发布issues&lt;/a&gt;或者在下方评论区评论等形式参与到本文档的编辑中来。浏览时，使用&lt;code&gt;Ctrl+F&lt;/code&gt;搜索关键词。&lt;em&gt;（是不是会有似曾相识的感觉，= =）&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Github SSH Key以免去Hexo部署时输入密码</title>
      <link>https://xuanwo.org/2015/02/07/generate-a-ssh-key/</link>
      <pubDate>Sat, 07 Feb 2015 14:40:16 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/02/07/generate-a-ssh-key/</guid>
      <description>&lt;p&gt;原文本来放在&lt;a href=&#34;http://xuanwo.org/2014/08/14/hexo-usual-problem/&#34;&gt;Hexo常见问题解决方案&lt;/a&gt;之中，但是由于步骤较多，理解起来比较困难，因此将本文独立出来单独成篇，以便于进行操作。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Travis CI自动部署Hexo</title>
      <link>https://xuanwo.org/2015/02/07/travis-ci-hexo-autodeploy/</link>
      <pubDate>Sat, 07 Feb 2015 14:00:51 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/02/07/travis-ci-hexo-autodeploy/</guid>
      <description>&lt;p&gt;前两天了解到了一个有趣的概念叫持续集成：
&amp;gt; 持续集成是一种软件开发实践。在持续集成中，团队成员频繁集成他们的工作成果，一般每人每天至少集成一次，也可以多次。每次集成会经过自动构建（包括自动测试）的检验，以尽快发现集成错误。许多团队发现这种方法可以显著减少集成引起的问题，并可以加快团队合作软件开发的速度。这篇文章简要介绍了持续集成的技巧和它最新的应用。
然后想到我的博客也恰好满足这样的需求，因为我的博客一旦有了修改，就必须要重新build并且部署，那么能不能用持续集成的思想来改造我部署博客的流程呢？&lt;/p&gt;

&lt;p&gt;在这样的指导思想下，我完成了上一篇文章：&lt;a href=&#34;https://xuanwo.org/2015/02/05/VPS-Hexo-Autodeploy/&#34;&gt;VPS搭配Github Webhook实现Hexo自动发布&lt;/a&gt;，而今天我要介绍一下，在没有VPS的情况下，如何更方便的配置自己的持续集成的博客。&lt;/p&gt;

&lt;h1 id=&#34;好处&#34;&gt;好处&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;方便：只需要一次配置，便省去了每一次编辑文档后，都需要进行&lt;code&gt;hexo d -g&lt;/code&gt;的麻烦，更不必说文章增多之后渲染时间还会增长。&lt;/li&gt;
&lt;li&gt;稳定：这个是最近才发现的，Github被搞了之后，很多人反映不能更新博客了，使用&lt;code&gt;Travis CI&lt;/code&gt;，你只要想办法提交一个小md文档，就能进行构建。如果自己手动构建，只要一个文件上传失败，前面的工作都白费了。&lt;/li&gt;
&lt;li&gt;快捷：即使是出差在外，只要能编辑Markdown，就可以撰写博客，使得Hexo拥有类似于WP一致的体验~&lt;/li&gt;
&lt;li&gt;协作：博客的构建完全交由&lt;code&gt;Travis CI&lt;/code&gt;进行，所以完全可以通过&lt;code&gt;Hexo&lt;/code&gt;+&lt;code&gt;git&lt;/code&gt;构建一个多人协作的博客平台。实际上，Hexo的&lt;a href=&#34;https://hexo.io/&#34;&gt;官网&lt;/a&gt;正是这样构建的。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VPS搭配Github Webhook实现Hexo自动发布</title>
      <link>https://xuanwo.org/2015/02/05/vps-hexo-autodeploy/</link>
      <pubDate>Thu, 05 Feb 2015 23:22:30 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/02/05/vps-hexo-autodeploy/</guid>
      <description>&lt;p&gt;自从买了VPS之后，我的人生就多了一个需要思考的问题——我的VPS还能用来干嘛？然后想到Github有一个Webhook的功能，可以在每一次提交之后发送一个POST到指定的URL。那么，只要找一个办法获取这个POST，再执行指定的命令，可以实现Hexo的自动发布功能了。从此以后，不管在哪里，我只要修改我的md文件，push之后我的服务器就能自动进行编译并且部署了。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>超星学术视频下载处理一条龙</title>
      <link>https://xuanwo.org/2015/01/07/chaoxing-download/</link>
      <pubDate>Wed, 07 Jan 2015 01:12:07 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/01/07/chaoxing-download/</guid>
      <description>&lt;p&gt;我妹纸最近开始通过看超星学术视频来&lt;del&gt;复习&lt;/del&gt;预习课程了，所以我必须搞到对应课程的所有视频（不管是收费还是免费），而且我妹纸还是一个有强迫症的萌妹纸，所有的视频都必须按照顺序拍的好好的，要不然她就会不舒服。
根据以上描述，我需要解决以下需求：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;破解超星学术视频的加密链接，找到真实的下载链接。&lt;/li&gt;
&lt;li&gt;重命名下载下来的视频文件。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;还是跟以往一样，直接把最终的解决方案放出来，要是对具体的实现感兴趣的可以接着往下面看。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>大学生网站集合</title>
      <link>https://xuanwo.org/2014/10/25/websitesforstudents/</link>
      <pubDate>Sat, 25 Oct 2014 13:46:37 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/10/25/websitesforstudents/</guid>
      <description>&lt;p&gt;即使是在搜索引擎如此发达的今天，依然有很多偏僻但是特别有用的网站被无数SEO们死死地压在身下。比如，直到现场赛的前几天，才从学长们的口中知道了在线数列大全（OEIS）这样神一般的网站。我就不禁想，像这样的网站是不是并不在少数？我们是不是可以把自己积累的一些好网站共享出来，让大家都能在搜寻某方面的信息可以对症下药，而不是用几个关键词翻来覆去地在Google上面盲目的搜寻？于是，这个&lt;a href=&#34;https://github.com/Xuanwo/WebsitesForStudents&#34;&gt;大学生网站集合项目&lt;/a&gt;就诞生了。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>深澜HTML登陆——防掉线，开共享</title>
      <link>https://xuanwo.org/2014/10/03/srun/</link>
      <pubDate>Fri, 03 Oct 2014 20:38:27 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/10/03/srun/</guid>
      <description>&lt;p&gt;一直以来使用的是老版的SRUN3000.exe客户端，同时也忍受着老版客户端频繁掉线以及莫名卡死等诡异问题。来到实验室之后，老版客户端出现了秒退的现象，刚登陆就提示“检测到代理服务，已自动下线”；使用新版的客户端，则提示“与绑定的IP不一致或开启了共享，balabala”。看来深澜的限制已经影响到我的正常使用了，不如自己捣鼓一下吧。下面直接放出解决方案（地大专用），如果对原理感兴趣的可以继续往下看。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>跨城公交网站的想法</title>
      <link>https://xuanwo.org/2014/09/10/transport-website/</link>
      <pubDate>Wed, 10 Sep 2014 09:49:15 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/09/10/transport-website/</guid>
      <description> 功能痛点 跨城市的公共交通导航
实现途径 调用各大地图服务提供商的API（比如百度）
实现方法 将一条需求的导航路线分成三段：
出发城市-&amp;gt;城市之间的长途交通（长途汽车，火车，飞机，轮船）-&amp;gt;到达城市  根据所选择的交通方式的不同，分别在各自城市内设定起点至对应站点。
可能的具体功能点  最优费用计算 最短到达时间 行程规划 用于旅游导航服务（携程快来收购我，233333）  盈利方式  关联广告（流量变现） 票券代购（收取服务费，感觉不靠谱）  相关风险  没有什么技术难度，很容易被百度地图之类的作为一个小功能加入，难以竞争。 地图依赖于服务提供商的更新，上游受到控制，相关API可能被限制调用。  更新日志  2014年09月10日 简单的完成列举了自己的想法。  </description>
    </item>
    
    <item>
      <title>世界——我的游戏狂想曲</title>
      <link>https://xuanwo.org/2014/09/07/world/</link>
      <pubDate>Sun, 07 Sep 2014 05:20:01 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/09/07/world/</guid>
      <description>&lt;p&gt;凌晨，打了一个电话之后发现大脑意外的活跃，毫无睡意。躺在床上百无聊赖的时候突然想要自己来设计一个游戏，我梦想中的完美游戏。大部分创意都来自我看过的小说（*吐槽一下中国市场上百花齐放的网游小说，相比之下刀剑神域的idea实在太low了*），只是这次我希望寻找出一个办法来使得这些元素更好地结合在一起。游戏的名字，暂且定为——世界。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TiddlyWiki中文教程</title>
      <link>https://xuanwo.org/2014/08/29/tiddlywiki-doc-cn/</link>
      <pubDate>Fri, 29 Aug 2014 09:18:06 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/08/29/tiddlywiki-doc-cn/</guid>
      <description> TiddlyWiki是我见过的配置最为简单的Wiki系统，纯HTML实现，不需要服务器，没有复杂的依赖，使用体验非常赞。但是国内使用的人实在太少，而且TiddlyWiki更新迭代很快，原有的一些文档已经不再适用于最新版本的TiddlyWiki了。
基础教学 下载如下页面:http://tiddlywiki.com/empty.html，保存至自己想要保存的地方。 做任何修改之后，点击保存，浏览器会自动弹出另存为窗口，覆盖自己原先保存的html文件即可。 没错，就是这么简单！
更新日志  2014年08月29日 我们的征途，当是星辰大海。 2014年09月03日 完成基础教学，接下来会依次补充基于浏览器的高阶用法，以及如何在node.js服务器上使用它，不过快开学了，最近有点忙= =。  </description>
    </item>
    
    <item>
      <title>修改Foobar2000的皮肤</title>
      <link>https://xuanwo.org/2014/08/28/foobar2000-skins/</link>
      <pubDate>Thu, 28 Aug 2014 22:09:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/08/28/foobar2000-skins/</guid>
      <description>&lt;p&gt;大图镇楼，没错，这就是Foobar2000.
&lt;img src=&#34;https://xuanwo.org/imgs/opinion/foobar-main.png&#34; alt=&#34;Foobar2000主界面&#34; /&gt;
)&lt;/p&gt;

&lt;p&gt;之前装过好几次Foobar2000，但后来都删掉了，原因是它的界面着实不符合我的审美。直到后来偶然间看到某大神图才发现，原来Foobar2000的正确打开方式是这样的！但是由于版本变迁，前辈们写的文章已经不太适用于最新的版本了，在主题的配置上绕了好大的弯子，决定自己来完成一篇教程。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SourceTree使用SSH连接Github</title>
      <link>https://xuanwo.org/2014/08/28/sourcetree-ssh-github/</link>
      <pubDate>Thu, 28 Aug 2014 21:44:21 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/08/28/sourcetree-ssh-github/</guid>
      <description> 问题描述 使用SourceTree软件用SSH的方式来克隆Github上面的某一个库，但是始终出现Permission Denied。
解决方案 修改SourceTree默认的SSH客户端，使用OpenSSH来链接（仅适用于Git）。 工具-&amp;gt;选项-&amp;gt;一般，SSH客户端选择OpenSSH。 SSH密钥选择之前已经生成好的SSH密钥，纯文件形式，无后缀，一般位于C:\Users\yourname\.ssh目录下。 更新日志  2014年08月28日 完成解决方案。  </description>
    </item>
    
    <item>
      <title>Sublime For Wiz —— 为知笔记的Sublime插件</title>
      <link>https://xuanwo.org/2014/08/27/sublime-for-wiz/</link>
      <pubDate>Wed, 27 Aug 2014 15:59:17 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/08/27/sublime-for-wiz/</guid>
      <description>&lt;h1 id=&#34;介绍&#34;&gt;介绍&lt;/h1&gt;

&lt;p&gt;一个非常简单的为知插件，基于大神发布的Vim编辑器修改而来，使用了CodeMirror开源库，目前的功能只不过是更换了编辑页面而已，简陋的很。目标是为为知提供良好的代码高亮及Markdown实时渲染功能。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gitbook——你自己的开源电子书</title>
      <link>https://xuanwo.org/2014/08/21/opensource-book/</link>
      <pubDate>Thu, 21 Aug 2014 08:41:49 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/08/21/opensource-book/</guid>
      <description>&lt;p&gt;想自己写一本开源电子书，却被各种复杂的配置，环境所困扰？Readthedocs支持的语言用得不如Markdown爽？不想没更新一次都自己构建一遍？或者，你想成就一本辉煌的开源巨著躺着挣钱？Gitbook是你最好的选择——需要配置的项目少，使用Markdown标记语言，每次提交都自动进行构建，可以对自己的书进行定价（还能接受捐赠- -，国内就算了。。）。下面我就来稍微介绍一下Gitbook以及如何进行基本的配置。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hexo常见问题解决方案</title>
      <link>https://xuanwo.org/2014/08/14/hexo-usual-problem/</link>
      <pubDate>Thu, 14 Aug 2014 05:20:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/08/14/hexo-usual-problem/</guid>
      <description>&lt;h1 id=&#34;介绍&#34;&gt;介绍&lt;/h1&gt;

&lt;p&gt;Hexo是一个非常好用的静态博客生成器，但是由于很多方面的原因，导致在使用过程中经常出现错误。这些错误中，有些是因为自己的设置不当，导致程序报错；有些是因为版本更迭，导致原有的设置失效；而有些，则是Hexo程序本身的BUG。
本文旨在尽可能的解决前两类问题，缓解Hexo项目大量重复issues的现象。当然，我个人的力量是有限的，因此也希望使用Hexo的大家也能一起行动起来，通过&lt;a href=&#34;https://github.com/Xuanwo/xuanwo.github.io/pulls&#34;&gt;提交PR&lt;/a&gt;，&lt;a href=&#34;https://github.com/Xuanwo/xuanwo.github.io/issues&#34;&gt;发布issues&lt;/a&gt;或者在下方评论等形式参与到本文档的编辑中来。
同时，也希望有能力的人可以将本文档翻译成英文，以帮助到更多的人。
浏览时，使用&lt;code&gt;Ctrl+F&lt;/code&gt;搜索关键词或使用目录来定位问题。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;本文欢迎转载，但是恳请保留贡献者信息，谢谢。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>强大且配置项丰富的在线IDE应用——Cloud9</title>
      <link>https://xuanwo.org/2014/08/07/cloud9/</link>
      <pubDate>Thu, 07 Aug 2014 13:31:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/08/07/cloud9/</guid>
      <description>&lt;p&gt;废话先不说，首先来一张大图秀一下编辑状态下的页面：
&lt;img src=&#34;https://xuanwo.org/imgs/opinion/C9-main.png&#34; alt=&#34;C9的主界面&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Hexo构建项目Wiki</title>
      <link>https://xuanwo.org/2014/07/07/use-hexo-to-bulid-project-wiki/</link>
      <pubDate>Mon, 07 Jul 2014 00:38:09 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/07/07/use-hexo-to-bulid-project-wiki/</guid>
      <description>&lt;p&gt;七七事件前一天，我有幸加入了&lt;a href=&#34;https://github.com/cugbacm/oj&#34;&gt;本校OJ2.0&lt;/a&gt;项目组。非常高兴能够为我们学校自己的OJ开源项目做出一份贡献，虽然只是一份整理Wiki的小活儿，但是这是我第一次真正的参与一个源项目。经过谨慎考虑之后，我决定项目的Wiki使用Github Pages来构建。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>为什么我最后选择了OneDrive</title>
      <link>https://xuanwo.org/2014/06/13/why-i-choose-onedrive/</link>
      <pubDate>Fri, 13 Jun 2014 16:00:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/06/13/why-i-choose-onedrive/</guid>
      <description>&lt;p&gt;我从很早开始就接受了网盘这个概念，大概是七年之前，我还在上小学六年级的时候吧= =。好像是2006年的《电脑报》合刊，在上面看到了关于QQ的网络硬盘的介绍，现在还清晰的记得，容量是16M，只有会员才能扩大，囧。然后就一直在寻找适合我用的给力的网盘。&lt;/p&gt;

&lt;h2 id=&#34;hugomore42&#34;&gt;&lt;/h2&gt;

&lt;h1 id=&#34;常见网盘介绍&#34;&gt;常见网盘介绍&lt;/h1&gt;

&lt;p&gt;仔细想想，我体验的网盘真心不少了，下面来稍微列举一下，并附上官网链接。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Github Pages做博客的新思路——Spring</title>
      <link>https://xuanwo.org/2014/06/11/new-way-blog-spring/</link>
      <pubDate>Wed, 11 Jun 2014 14:00:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/06/11/new-way-blog-spring/</guid>
      <description>&lt;p&gt;很久之前就有了想要有一个自己的博客的想法，一直没有付诸于实施。整个初中到高中基本上就是在使用一个半死不活的CSDN博客，更新不多，质量不高，还有点嫌弃它丑陋，定制性不佳的界面。
前两天队长要求我们每个人都必须开通一个博客，于是，我终于开始腾出精力和时间去寻找一个合适的地方来做我的博客。现有的一些博客提供商都被否决了，网易搜狐腾讯之类的并不是适合一个程序猿，文章写出来也得不到反馈与交流，失去了它的意义。随着搜索的进行，Github Pages开始频繁的出现在页面上。之前一直在用Github，但是对它的Pages业务并不了解。根据一些教程（感谢&lt;a href=&#34;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&#34;&gt;阮一峰先生的博客&lt;/a&gt;），我先后使用了&lt;code&gt;Hexo&lt;/code&gt;，&lt;code&gt;Jekyll&lt;/code&gt;，&lt;code&gt;Octopress&lt;/code&gt;等生成网站。网站的风格我很喜欢，只是不停地纠结于怎样的配置更好的问题，反而加重了我自己的负担。
无意之间，我看到了@zhaoda的博客，使用自己开发的&lt;code&gt;Spring&lt;/code&gt;项目，通过抓取项目的&lt;code&gt;issues&lt;/code&gt;来撰写博客，效果出奇的好。使用Github自带的&lt;code&gt;lables&lt;/code&gt;进行标签管理，&lt;code&gt;issues&lt;/code&gt;的评论功能直接可以当做文章的评论区，操作简单，无需复杂配置，完全符合我的要求。&lt;/p&gt;

&lt;h2 id=&#34;hugomore42&#34;&gt;&lt;/h2&gt;

&lt;h1 id=&#34;作者本人的介绍&#34;&gt;作者本人的介绍&lt;/h1&gt;

&lt;p&gt;Spring是一个通过GitHub Issues撰写内容的博客引擎，或者说是一个简单、静态化的建站系统。不需要服务器和数据库支持，你可以把它作为一个GitHub代码仓库，并托管在免费的GitHub Pages上运行，然后在这个仓库的Issues系统里撰写日志。
你可以在这个仓库的Issues系统里添加labels标签，这些标签会成为博客的分类，然后新建Issues，并用Markdown语法写日志。
Spring拥有响应式的页面设计，可以在手机、平板和桌面端完美展现；支持IE10+和所有现代浏览器，底端设备做了跳转的降级处理。
你可以快速的安装并运行这个系统。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sublime Text 3 化身为高大上的C/C&#43;&#43; IDE</title>
      <link>https://xuanwo.org/2014/06/05/sublime-text-3-ide/</link>
      <pubDate>Thu, 05 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2014/06/05/sublime-text-3-ide/</guid>
      <description>&lt;p&gt;我是一只有着小小的强迫症的苦逼菜鸟，敲代码追求一个爽快。原来一直在用Code::Blocks，虽然说是用C++开发的，效率很高，但是每次启动的时候总是要盯着它不怎么样的启动页看很久，不开心= =。这两天开始接触Sublime Text，顿时被迷住了，不管不顾的决定把它改造成一个狂霸酷拽屌的IDE，所以，走你～～&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>