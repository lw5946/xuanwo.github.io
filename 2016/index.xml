<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2016s on Xuanwo&#39;s Blog</title><link>https://xuanwo.io/2016/</link><description>Recent content in 2016s on Xuanwo&#39;s Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 22 Nov 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://xuanwo.io/2016/index.xml" rel="self" type="application/rss+xml"/><item><title>有趣的网页乱码问题</title><link>https://xuanwo.io/2016/11/22/garbled-page/</link><pubDate>Tue, 22 Nov 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/11/22/garbled-page/</guid><description>&lt;p&gt;这是来自segmentfault的一个问题：&lt;a href=&#34;https://segmentfault.com/q/1010000007540588&#34;&gt;node.js中抓取utf-8编码的网页为什么也是乱码&lt;/a&gt;，解答完这个问题之后，决定探讨一下网页乱码这个问题。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>httpbin 介绍</title><link>https://xuanwo.io/2016/11/12/httpbin-intro/</link><pubDate>Sat, 12 Nov 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/11/12/httpbin-intro/</guid><description>&lt;p&gt;在所有需要做HTTP请求的开发过程中，总有一个这样的痛点：我发出去的请求到底是什么样子的？特别是在一些需要签名和认证的场合，服务器只会冷冰冰的返回一个&lt;code&gt;40x&lt;/code&gt;错误，你无从得知错误的具体详情。本文旨在介绍&lt;code&gt;httpbin&lt;/code&gt;，看看它是如何解决这个痛点的。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>再见， Hexo</title><link>https://xuanwo.io/2016/10/23/goodbye-hexo/</link><pubDate>Sun, 23 Oct 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/10/23/goodbye-hexo/</guid><description>&lt;p&gt;其实我现在的心情比较复杂。
Hexo 我从大一的暑假就开始用，大二的时候加入了 Hexo 的团队，一直到现在，关于 Hexo 的文章都是我博客点击率最高的文章。
但是由于我实在是精力有限，没有时间去维护Hexo的相关项目，因此只能与Hexo说再见了，希望能有更多人可以加入Hexo的开发团队，希望Hexo能够发展的更好。
下面简单地分享一下自己在Hexo团队中做的工作和学到的东西。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>动态网页数据抓取踩坑分享</title><link>https://xuanwo.io/2016/09/13/dynamic-page-data-spider/</link><pubDate>Tue, 13 Sep 2016 01:58:33 +0000</pubDate><guid>https://xuanwo.io/2016/09/13/dynamic-page-data-spider/</guid><description>&lt;p&gt;之前做了一些数据抓取的工作，期间也踩了一些坑，所以有了这篇文章。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>nodebb-plugin-html5videoplayer 发布</title><link>https://xuanwo.io/2016/08/22/nodebb-plugin-html5videoplayer/</link><pubDate>Mon, 22 Aug 2016 17:53:25 +0000</pubDate><guid>https://xuanwo.io/2016/08/22/nodebb-plugin-html5videoplayer/</guid><description>&lt;p&gt;[nodebb-plugin-html5videoplayer]() 是一个简单的 NodeBB 插件，可以让 NodeBB 支持在线视频观看。Fork 自 &lt;a href=&#34;https://github.com/ogerly&#34;&gt;@ogerly&lt;/a&gt; 开发的 &lt;a href=&#34;https://github.com/ogerly/nodebb-plugin-videoplayer&#34;&gt;nodebb-plugin-videoplayer&lt;/a&gt;， 在他的基础上做了一些微不足道的贡献，括弧笑。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>NodeBB 升级迁移总结</title><link>https://xuanwo.io/2016/07/08/nodebb-upgrade/</link><pubDate>Fri, 08 Jul 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/07/08/nodebb-upgrade/</guid><description>&lt;p&gt;&lt;a href=&#34;https://community.qingcloud.com/&#34;&gt;青云用户社区&lt;/a&gt;使用了开源的 NodeBB 论坛，部署之初使用&lt;code&gt;0.7&lt;/code&gt;版本，因为没有跟随官方进度进行更新，导致论坛版本长期停滞。一方面无法享受到官方的BUG Fix，另一方面也无法使用很多业务需求的插件。思量再三后决定对社区进行升级迁移，不在原论坛直接升级，而是部署一套新的环境，将原有的数据全部导出。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>新博客上线&amp;Hexo主题开发入门</title><link>https://xuanwo.io/2016/06/29/new-blog-new-life/</link><pubDate>Wed, 29 Jun 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/06/29/new-blog-new-life/</guid><description>&lt;p&gt;曾经看过我的博客的同学大概都会发现，我的博客再一次大变样了~
这一次的更新其实酝酿了很久，早在刚开始用Hexo的时候就想着要有一个自己的主题。但是那个时候觉得这是一件很难的事情，要懂HTML，CSS，JavaScript，还要懂Swig，Ejs等模板语言，还要懂Hexo的内部原理，于是就一直搁置了。在独立实现了一个&lt;a href=&#34;https://xuanwo.io/2016/06/16/jade_ims/&#34;&gt;完整的项目&lt;/a&gt;之后，我认为自己已经有这样的能力了，于是决定正式开始。
在我看来的话，Hexo的使用者大概分为三个层次：第一种用别人的主题，第二种模仿现有的主题，第三种自己独立开发。我原来是第一种，在Next的基础上做了很多改动，这一次进入到了第二个层次。我找了一套自我感觉还不错的模板，然后套用它的CSS设定和页面结构，就成了我现在的主题。
利用两天学习和工作的闲暇时间，我大体上完成了这个主题。做得比较糙，很多细节还有待优化，但是我已经急不可耐地想要正式上线了，笑。在未来的话，我希望能把一些配置都能整理出来，优化一下代码，然后开源这个主题，希望大家能够喜欢~
庆祝的话已经说的差不多了，下面来讲一讲如何开发一个Hexo主题。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>马可波罗珠宝进销存系统开发手记</title><link>https://xuanwo.io/2016/06/16/jade_ims/</link><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/06/16/jade_ims/</guid><description>&lt;p&gt;&lt;img src=&#34;https://xuanwo.io/imgs/develop/jade-ims-index.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这个项目从我们这个学期开了&lt;strong&gt;系统分析与设计&lt;/strong&gt;这门课之后就开始了，首次创建这个项目是在3月26号，实际上真正的开发时间集中在6月上旬。差不多用两个星期的闲暇时间时间完成了这个简单的进销存系统。这个系统基于Flask框架，使用SQLite3数据库，前端则是使用Bootstrap框架，实现了包括客户，库存，销售，进货等管理子系统。说是管理，其实也就是简单的增加和删除而已。
前人经常说，不要重复造轮子。既然有类似于Odoo这样强大的ERP系统珠玉在前，我为什么要再自己造一个功能简单，甚至根本不会有人用的轮子呢？从前我确实是这么想的，但是稍微有一点工作经验之后发现再造轮子的原因有两条：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作为一个处在知识积累阶段的学生而言，再造轮子很有必要。不造一次轮子，你就永远不会明白轮子内部的真实构造。很多技术虽然看起来简单，但是想要有一个完善且健壮的实现却有很多坑需要踩。踩这些坑的过程，也正是一个技术人员成长最快的过程。&lt;/li&gt;
&lt;li&gt;别人的轮子终究是别人的。你不知道这个轮子最大能承受多少压力，你也不知道这个轮子在什么样的情况下会爆胎。当一个轮子装上企业呼呼向前的列车，再要想把它替换下来是一件很难且成本很高的事情。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来，讲讲造这个轮子的一些经历吧~&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>在QingCloud上部署弹性扩容的OwnCloud</title><link>https://xuanwo.io/2016/06/03/owncloud-on-qingcloud/</link><pubDate>Fri, 03 Jun 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/06/03/owncloud-on-qingcloud/</guid><description>&lt;p&gt;因为实在不满意百度云的一些缺陷，我们最终决定部署一套团队内部使用的云存储平台，用于团队协作及资料长期存储。希望能够达到如下目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据安全性高&lt;/li&gt;
&lt;li&gt;权限控制能力强&lt;/li&gt;
&lt;li&gt;分享功能更强，可以设置密码和过期时间等&lt;/li&gt;
&lt;li&gt;允许匿名第三方上传数据&lt;/li&gt;
&lt;li&gt;没有文件上传大小限制&lt;/li&gt;
&lt;li&gt;支持多平台同步功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;综合考量各开源项目之后，我最终选定基于QingCloud部署一套开源存储项目OwnCloud。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>我从Qingchat中学到的教训</title><link>https://xuanwo.io/2016/05/29/learn-from-qingchat/</link><pubDate>Sun, 29 May 2016 20:57:00 +0000</pubDate><guid>https://xuanwo.io/2016/05/29/learn-from-qingchat/</guid><description>&lt;p&gt;之前的一段时间一直在从事&lt;a href=&#34;https://github.com/Xuanwo/qingchat&#34;&gt;Qingchat&lt;/a&gt;的相关开发工作，这个项目是一个基于Mojo-Weixin提供的Rest API开发的一个微信机器人，承担了十余个群，上千人的微信直播活动。秉承着ACM训练出来的“暴力加乱搞”风格，我花了大概一个星期的课余时间，搞出了一个可用的版本。期间也迭代了很多次，既欣慰于Coding的力量，也苦恼于当初设计的不完善带来的种种问题。在这个项目即将大规模重构的前夕，我总结一下开发Qingchat的过程中的经验教训，希望自己能成为一个更好更聪明的Coder。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>基于MSP430G2553的打铃系统开发手记</title><link>https://xuanwo.io/2016/05/09/msp430g2553-bellring/</link><pubDate>Mon, 09 May 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/05/09/msp430g2553-bellring/</guid><description>&lt;p&gt;我萌萌哒的妹纸是一个代码苦手，完全无法理解 C 语言，所以每一次到单片机上机需要交作业的时候都是愁眉苦脸的样子。而我又总是因为自己确实不懂单片机里面的种种奇怪定义（中断，串口，P1.x 之类），所以也一直没有什么好办法去帮她。这一次的作业对编码能力要求较高，但是涉及到的硬件比较少，于是决定以此为契机，开始我的嵌入式开发之旅。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>Gitlab部署和汉化以及简单运维</title><link>https://xuanwo.io/2016/04/13/gitlab-install-intro/</link><pubDate>Wed, 13 Apr 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/04/13/gitlab-install-intro/</guid><description>&lt;h1 id=&#34;起因&#34;&gt;起因&lt;/h1&gt;
&lt;p&gt;在跟网络中心的老师沟通成立镜像站的相关事宜的时候，意外地接下来搭建一套校内的 Git 服务的任务。
&lt;a href=&#34;https://imnerd.org/&#34;&gt;@怡红公子&lt;/a&gt; 曾经搭建过一套类似的服务，但由于服务器端没有开启 VT 虚拟化导致不能安装 64 位的操作系统，再加上 Gitlab 不提供 32 位的安装包，所以长期以来怡红公子一直都是自行编译并配置 Gitlab 。考虑到后续维护的方便，我们决定趁着这个机会使用另一台支持安装 64 位操作系统的服务器，一劳永逸地解决这个问题。
我们的服务器环境是 &lt;strong&gt;CentOS 7.2 64bit&lt;/strong&gt; ，以下所有操作均以此为基准。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>docopt——好用的Python命令行参数解释器</title><link>https://xuanwo.io/2016/04/04/docopt-intro/</link><pubDate>Mon, 04 Apr 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/04/04/docopt-intro/</guid><description>&lt;p&gt;&lt;a href=&#34;https://github.com/Xuanwo/qingchat&#34;&gt;&lt;code&gt;Qingchat&lt;/code&gt;&lt;/a&gt; 使用的命令行参数解释器是 &lt;a href=&#34;http://docopt.org/&#34;&gt;&lt;code&gt;docopt&lt;/code&gt;&lt;/a&gt;，用下来感觉非常棒，所以决定介绍一下这个库。（*奉劝各位看官，珍爱生命，远离argparse。*）&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>微信多群直播的新探索——Qingchat</title><link>https://xuanwo.io/2016/04/01/qingchat-intro/</link><pubDate>Fri, 01 Apr 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/04/01/qingchat-intro/</guid><description>&lt;p&gt;在我之前写过的一篇文章中，我曾经探索过类似的问题：&lt;a href=&#34;https://xuanwo.io/2016/02/28/wechat-remove/&#34;&gt;微信群重复人员识别&lt;/a&gt;。当初我就提出过能否自动获取相关数据，但因为种种原因的限制不了了之了。后来发现了&lt;a href=&#34;https://github.com/sjdy521/Mojo-Weixin&#34;&gt;Mojo-Weixin&lt;/a&gt;这个库之后，我决定在这个的基础上实现一个微信多群直播的工具——Qingchat。（*尽管在刚刚实现完不久，微信就更新了转发到多个群的功能，Sad。*）探索的成果如下： &lt;a href=&#34;https://github.com/Xuanwo/qingchat&#34;&gt;Qingchat&lt;/a&gt;，目前仅支持 python3 ，欢迎各位看官提 issues ，交 code ，或者拍砖。
接下来我会先介绍一下 Qingchat 的原理，然后介绍 Qingchat 的使用，最后展望一下 Qingchat 未来的发展方向。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>Neovim慢速升级攻略</title><link>https://xuanwo.io/2016/03/12/neovim-slow-upgrade/</link><pubDate>Sat, 12 Mar 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/03/12/neovim-slow-upgrade/</guid><description>&lt;p&gt;一直都非常羡慕那些能把vim用得非常溜的人，但是自己总是不情愿去学，总是觉得vim的操作方式非常反人类，难度曲线太陡，不适合我。真正让我下定决心去学的，是因为系统切换到Ubuntu Gnome之后发现，Sublime Text 3 不能原生支持中文输入。同时我也发现，如果我不上来就折腾spf13这样的东西的话，其实vim非常好懂。于是，Neovim的慢速升级攻略就这样诞生了。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>微信群重复人员识别</title><link>https://xuanwo.io/2016/02/28/wechat-remove/</link><pubDate>Sun, 28 Feb 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/02/28/wechat-remove/</guid><description>&lt;p&gt;由于微信的限制，人数超过一百以后，只有邀请才能加入。所以，如果想要组织大型的在线活动，就只有建立很多个分群。然而分群的问题在于，会有很多人重复加群，挤占了本来就缺乏的空间。所以需要找到一个可行的办法，清除两个群中的重复人员。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>记一次debug的经历及反思</title><link>https://xuanwo.io/2016/02/26/debug-for-hexo-1775/</link><pubDate>Fri, 26 Feb 2016 00:00:00 +0000</pubDate><guid>https://xuanwo.io/2016/02/26/debug-for-hexo-1775/</guid><description>&lt;h2 id=&#34;起因&#34;&gt;起因&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hexojs/hexo/issues/1775&#34;&gt;hexojs/hexo #1775&lt;/a&gt;
BUG非常明显，在使用hexo 3.1.1搭建一个位于子目录下的博客，然后会发现home以及categories的链接全都忽略了子目录的设定。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>北地网费新政策下的生存攻略</title><link>https://xuanwo.io/2016/02/17/ipv6-in-cugb/</link><pubDate>Wed, 17 Feb 2016 18:59:02 +0000</pubDate><guid>https://xuanwo.io/2016/02/17/ipv6-in-cugb/</guid><description>&lt;p&gt;主旨只有两条：开源，节流&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>Chocolatey——Windows下的包管理工具</title><link>https://xuanwo.io/2016/02/15/chocolatey-intro/</link><pubDate>Mon, 15 Feb 2016 20:15:46 +0000</pubDate><guid>https://xuanwo.io/2016/02/15/chocolatey-intro/</guid><description>&lt;p&gt;&lt;a href=&#34;https://chocolatey.org/&#34;&gt;Chocolatey&lt;/a&gt;是一个基于Nuget的Windows包管理工具，截止到我更新此文章的时候，一共有3.7k多个独立包。本文旨在介绍Chocolatey这一工具的安装和用法，希望能有更多人享受到该工具的便利之处。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>解放你的智能电视</title><link>https://xuanwo.io/2016/02/04/unlock-your-smart-tv/</link><pubDate>Thu, 04 Feb 2016 23:12:52 +0000</pubDate><guid>https://xuanwo.io/2016/02/04/unlock-your-smart-tv/</guid><description>&lt;p&gt;现在很多人都买了智能电视，但是出于种种你懂得原因，厂商通常都不允许用户自行安装自己想要的APP，比如腾讯视频，优酷视频之类的。本教程旨在突破这些限制，彻底解放智能电视的全部潜力。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>如何识别真假链接？</title><link>https://xuanwo.io/2016/01/13/how-to-differ-invalid-link/</link><pubDate>Wed, 13 Jan 2016 01:18:51 +0000</pubDate><guid>https://xuanwo.io/2016/01/13/how-to-differ-invalid-link/</guid><description>&lt;p&gt;前两天我的朋友圈被微信公开课活动的链接+截图刷屏，随后一大帮“业内人士”站出来说这个是盗号连接，只要点开，微信钱包和支付宝就会被盗。作为半个业内人士，我不能忍了，决定跟大家谈一谈如何识别真假链接。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>VS2015连接Oracle数据库</title><link>https://xuanwo.io/2016/01/03/vs-oracle-11g/</link><pubDate>Sun, 03 Jan 2016 15:31:32 +0000</pubDate><guid>https://xuanwo.io/2016/01/03/vs-oracle-11g/</guid><description>&lt;h1 id=&#34;开发环境&#34;&gt;开发环境&lt;/h1&gt;
&lt;p&gt;宿主机：Win10 + VS2015 + ODP.Net for VS2015
虚拟机：Win7 + Oracle 11g + 桥接&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item></channel></rss>