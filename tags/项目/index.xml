<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>项目 on Xuanwo&#39;s Blog</title>
    <link>https://xuanwo.org/tags/%E9%A1%B9%E7%9B%AE/</link>
    <description>Recent content in 项目 on Xuanwo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 16 Jun 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xuanwo.org/tags/%E9%A1%B9%E7%9B%AE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>马可波罗珠宝进销存系统开发手记</title>
      <link>https://xuanwo.org/2016/06/16/jade_ims/</link>
      <pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://xuanwo.org/2016/06/16/jade_ims/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://xuanwo.org/imgs/develop/jade-ims-index.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这个项目从我们这个学期开了&lt;strong&gt;系统分析与设计&lt;/strong&gt;这门课之后就开始了，首次创建这个项目是在3月26号，实际上真正的开发时间集中在6月上旬。差不多用两个星期的闲暇时间时间完成了这个简单的进销存系统。这个系统基于Flask框架，使用SQLite3数据库，前端则是使用Bootstrap框架，实现了包括客户，库存，销售，进货等管理子系统。说是管理，其实也就是简单的增加和删除而已。
前人经常说，不要重复造轮子。既然有类似于Odoo这样强大的ERP系统珠玉在前，我为什么要再自己造一个功能简单，甚至根本不会有人用的轮子呢？从前我确实是这么想的，但是稍微有一点工作经验之后发现再造轮子的原因有两条：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;作为一个处在知识积累阶段的学生而言，再造轮子很有必要。不造一次轮子，你就永远不会明白轮子内部的真实构造。很多技术虽然看起来简单，但是想要有一个完善且健壮的实现却有很多坑需要踩。踩这些坑的过程，也正是一个技术人员成长最快的过程。&lt;/li&gt;
&lt;li&gt;别人的轮子终究是别人的。你不知道这个轮子最大能承受多少压力，你也不知道这个轮子在什么样的情况下会爆胎。当一个轮子装上企业呼呼向前的列车，再要想把它替换下来是一件很难且成本很高的事情。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;接下来，讲讲造这个轮子的一些经历吧~&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>基于Socket.io的虚拟计算机</title>
      <link>https://xuanwo.org/2015/07/06/socket-vm/</link>
      <pubDate>Mon, 06 Jul 2015 21:05:38 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/07/06/socket-vm/</guid>
      <description>&lt;p&gt;基于Socket.io有很多特别强大的应用，socket.io官方提供的一个&lt;a href=&#34;http://socket.io/demos/computer/&#34;&gt;虚拟计算机Demo&lt;/a&gt;就非常赞。通过将使用Qemu虚拟取出来的PC界面转发至Socket.io的端口，然后对Canvas不断地进行绘制，形成了近似与远程操控的体验。我们&lt;a href=&#34;http://xuanwo.org/2015/06/30/together-project/&#34;&gt;Together项目&lt;/a&gt;用到了这个库，但由于这个库发布于很久之前，再加上相关文档过少，导致部署起来极为困难。所以我完成了这篇文章，希望能让后来人少走一些弯路。

&lt;em&gt;下文基于Ubuntu 14.04 x64，其他系统请自行转换相应命令，谢谢~&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Teambition团队协作实践</title>
      <link>https://xuanwo.org/2015/07/02/teambition-work/</link>
      <pubDate>Thu, 02 Jul 2015 19:08:55 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/07/02/teambition-work/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://xuanwo.org/2015/06/30/together-project/&#34;&gt;Together&lt;/a&gt;团队组建完成后，一个现实的问题在于：我们怎么样进行协作。经过一番筛选之后，我选中了Teambition，一个简约但是够用的团队协作平台。我们团队围绕着我们的需求，基于Teambition建立了我们自己的协作平台。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Together网站项目设计</title>
      <link>https://xuanwo.org/2015/06/30/together-project/</link>
      <pubDate>Tue, 30 Jun 2015 11:08:47 +0000</pubDate>
      
      <guid>https://xuanwo.org/2015/06/30/together-project/</guid>
      <description>&lt;p&gt;&lt;strong&gt;本项目仍然处在设计阶段，一切变动以最终成果为准&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&#34;团队介绍&#34;&gt;团队介绍&lt;/h1&gt;

&lt;h2 id=&#34;团队分工&#34;&gt;团队分工&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;丁皓（组长），负责网站后端建设及维护（兼产品经理？）&lt;/li&gt;
&lt;li&gt;满全勇，负责网站着陆页设计&amp;amp;文案&lt;/li&gt;
&lt;li&gt;何壁伟，负责网站内容页设计&lt;/li&gt;
&lt;li&gt;马可，担任网站首席体验师&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;协同工具&#34;&gt;协同工具&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;分工：&lt;a href=&#34;https://www.teambition.com/&#34;&gt;Teambition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;交流：&lt;a href=&#34;http://www.qq.com/&#34;&gt;QQ&lt;/a&gt;，&lt;a href=&#34;https://jianliao.com/&#34;&gt;简聊&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;分享：&lt;a href=&#34;https://www.yinxiang.com/&#34;&gt;印象笔记&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>