<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2018s on Xuanwo&#39;s Blog</title><link>https://xuanwo.org/2018/</link><description>Recent content in 2018s on Xuanwo&#39;s Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 15 Oct 2018 13:35:00 +0000</lastBuildDate><atom:link href="https://xuanwo.org/2018/index.xml" rel="self" type="application/rss+xml"/><item><title>恢复博客遗失的评论</title><link>https://xuanwo.org/2018/10/15/revocer-lost-blog-comments/</link><pubDate>Mon, 15 Oct 2018 13:35:00 +0000</pubDate><guid>https://xuanwo.org/2018/10/15/revocer-lost-blog-comments/</guid><description>&lt;p&gt;最近发现自己博客的评论少了不少，于是找了一下原因并使用工具做了修复，这篇文章主要就是讲 Hugo 如何正确的配置 Disqus 以及如何使用 Disqus 提供的迁移工具来修复已经出问题的数据。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>Ingress 北京中轴线噩梦难度一日速刷攻略</title><link>https://xuanwo.org/2018/10/03/ingress-beijing-central-axis/</link><pubDate>Wed, 03 Oct 2018 15:35:00 +0000</pubDate><guid>https://xuanwo.org/2018/10/03/ingress-beijing-central-axis/</guid><description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/Ingress&#34;&gt;Ingress&lt;/a&gt; 是一款基于地理位置的大型多人侵入式虚拟现实游戏，由 &lt;a href=&#34;https://zh.wikipedia.org/wiki/Niantic&#34;&gt;Niantic Labs&lt;/a&gt; 开发。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为一位入坑多年，最近几个月才刚刚喜获人权的咸鱼玩家，这个十一长假不想平庸的度过，于是决定在 10 月 3 号的时候一日速刷北京中轴线。因为在适逢十一假期，再加上各种大家都懂的原因，这次任务的难度可以说是噩梦级别。这篇文章就是要跟大家分享一下我成功通关喜悦并且为更多想要一日速刷北京中轴线的同学提供一些小小的帮助。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>qscamel —— 数据迁移工具</title><link>https://xuanwo.org/2018/09/05/qscamel-intro/</link><pubDate>Wed, 05 Sep 2018 09:00:00 +0000</pubDate><guid>https://xuanwo.org/2018/09/05/qscamel-intro/</guid><description>&lt;p&gt;qscamel 是一个用于在不同的端点 (Endpoint) 中高效迁移数据的工具。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>Tiresias v0.3</title><link>https://xuanwo.org/2018/07/22/tiresias-v0.3/</link><pubDate>Sun, 22 Jul 2018 16:00:00 +0000</pubDate><guid>https://xuanwo.org/2018/07/22/tiresias-v0.3/</guid><description>&lt;p&gt;经过一段时间的摸鱼，Tiresias 发布了 v0.3 。新版本重新实现了 sync 的逻辑并且修复了部分 BUG，完整的 changelog 可以参考: &lt;a href=&#34;https://github.com/Xuanwo/tiresias/blob/master/CHANGELOG.md&#34;&gt;https://github.com/Xuanwo/tiresias/blob/master/CHANGELOG.md&lt;/a&gt; 。这篇文章主要介绍一下新的 sync 逻辑是如何实现的并介绍一下新增的功能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tiresias 是一个服务器信息管理工具，其目标是自动化服务器信息管理，取代手工维护的 Hosts 和 SSH Config&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>文档误读导致的 BUG</title><link>https://xuanwo.org/2018/06/15/bug-caused-by-misreading/</link><pubDate>Fri, 15 Jun 2018 18:00:00 +0000</pubDate><guid>https://xuanwo.org/2018/06/15/bug-caused-by-misreading/</guid><description>&lt;p&gt;之前听说过开发人员&lt;a href=&#34;https://www.theregister.co.uk/2018/05/09/intel_amd_kernel_privilege_escalation_flaws/&#34;&gt;读错 Intel 的文档&lt;/a&gt;导致出现了严重 &lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8897&#34;&gt;BUG&lt;/a&gt;，但是只是当成玩笑看待，但是等到这种事情发生在自己身上，还影响到了项目在用户生产环境的上线进度的时候，就不是那么好笑了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文取材自真实事件的复盘，项目相关信息已经去敏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>Tiresias —— 服务器信息管理工具</title><link>https://xuanwo.org/2018/05/22/tiresias-intro/</link><pubDate>Tue, 22 May 2018 04:00:00 +0000</pubDate><guid>https://xuanwo.org/2018/05/22/tiresias-intro/</guid><description>&lt;p&gt;大概从大二的时候开始就有这种困惑：不同的服务器所在的云服务商，数据中心，网段，用户名和私钥各不相同，他们的信息要如何管理？最开始是把所有的服务器信息都存放在了密码管理工具当中，后来知道了使用 &lt;a href=&#34;https://github.com/moul/advanced-ssh-config&#34;&gt;assh&lt;/a&gt; 来生成 &lt;code&gt;ssh_config&lt;/code&gt;，最后是 &lt;a href=&#34;https://pjw.io/&#34;&gt;@Aspire&lt;/a&gt; 提供的一个思路：使用脚本生成 &lt;code&gt;hosts&lt;/code&gt; 文件。于是我顺着 Aspire 的思路开发了一个工具：&lt;a href=&#34;https://github.com/Xuanwo/tiresias&#34;&gt;Tiresias&lt;/a&gt;，它可以读取事先写好的 YAML 配置文件并生成 &lt;code&gt;ssh_config&lt;/code&gt; 和 &lt;code&gt;hosts&lt;/code&gt; 文件。今天这篇文章就主要介绍一下我造的又一个轮子。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>ThinkPad X1 Carbon 2018 开箱手记</title><link>https://xuanwo.org/2018/05/16/thinkpad-x1-carbon-6th/</link><pubDate>Wed, 16 May 2018 11:30:00 +0000</pubDate><guid>https://xuanwo.org/2018/05/16/thinkpad-x1-carbon-6th/</guid><description>&lt;p&gt;经过了漫长的等待之后，我的新玩具终于到手了。这篇文章主要晒一些照片，并分享一下我这第一次海淘的经历。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;多图预警&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>Xuanzang —— 一款开箱即用的全文搜索引擎</title><link>https://xuanwo.org/2018/05/01/xuanzang-intro/</link><pubDate>Tue, 01 May 2018 13:30:00 +0000</pubDate><guid>https://xuanwo.org/2018/05/01/xuanzang-intro/</guid><description>&lt;p&gt;&lt;a href=&#34;https://github.com/Xuanwo/xuanzang&#34;&gt;Xuanzang&lt;/a&gt;, 中文名：玄奘，是一个支持中文分词的开源全文搜索引擎。其目标是做一个开箱即用，不需要复杂的部署和配置，可以方便的嵌入静态网站的全文搜索引擎。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>为 RSSHub 增加煎蛋无聊图支持</title><link>https://xuanwo.org/2018/04/21/add-jandan-pic-support-for-rsshub/</link><pubDate>Sat, 21 Apr 2018 07:30:00 +0000</pubDate><guid>https://xuanwo.org/2018/04/21/add-jandan-pic-support-for-rsshub/</guid><description>&lt;p&gt;&lt;a href=&#34;https://github.com/DIYgod/RSSHub&#34;&gt;RSSHub&lt;/a&gt; 是 &lt;a href=&#34;https://diygod.me/&#34;&gt;@DIYgod&lt;/a&gt; 开发的一个项目，其目标是：“使用 RSS 连接全世界”，实现的方式是抓取某个网页或者 API 后解析数据并生成符合标准的 RSS Feed。这个项目十分有意思，可以通过 RSS 去订阅 B 站的番剧或者网易云音乐的歌单，比如我最近正在追的一部动漫：&lt;a href=&#34;https://rss.now.sh/bilibili/bangumi/21680&#34;&gt;DARLING in the FRANXX&lt;/a&gt;。我最近为这个项目增加了煎蛋无聊图的支持，这篇文章主要就是讲一讲如何抓取并解析煎蛋无聊图。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>Python 中的引用与拷贝</title><link>https://xuanwo.org/2018/04/15/reference-and-copy-in-python/</link><pubDate>Sun, 15 Apr 2018 15:07:00 +0000</pubDate><guid>https://xuanwo.org/2018/04/15/reference-and-copy-in-python/</guid><description>&lt;p&gt;用户反馈使用 &lt;a href=&#34;https://github.com/yunify/qsctl&#34;&gt;qsctl&lt;/a&gt; 同步时文件内容不正确，调查后发现是对 Python 字典的错误使用导致了这个问题。这篇文章就来详细的介绍一下 Python 中的引用与拷贝。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>Hugo RSS 配置输出全文</title><link>https://xuanwo.org/2018/04/08/hugo-rss-output-all-content/</link><pubDate>Sun, 08 Apr 2018 16:07:00 +0000</pubDate><guid>https://xuanwo.org/2018/04/08/hugo-rss-output-all-content/</guid><description>&lt;p&gt;在折腾 Feedly 的时候偶然发现自己的博客输出的 RSS 里面只有摘要，想要看完整的内容需要跳转。这可不符合我的初衷，于是花了一些时间配置了一下相关的内容。接下来简要的介绍一下如何配置 Hugo 的模板以生成输出全文的 RSS Feed。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>Python os walk 的坑</title><link>https://xuanwo.org/2018/04/01/python-os-walk/</link><pubDate>Sun, 01 Apr 2018 10:07:00 +0000</pubDate><guid>https://xuanwo.org/2018/04/01/python-os-walk/</guid><description>&lt;p&gt;用户反馈使用在 windows 下使用 &lt;a href=&#34;https://github.com/yunify/qsctl&#34;&gt;qsctl&lt;/a&gt; 上传文件的时候会中断并抛出 &lt;code&gt;UnicodeDecodeError&lt;/code&gt; 异常，经过一番调查之后发现居然是 &lt;code&gt;os.walk&lt;/code&gt; 的坑。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item><item><title>基于 AWS Lambda 实现自动化</title><link>https://xuanwo.org/2018/01/14/automation-based-on-aws-lambda/</link><pubDate>Sun, 14 Jan 2018 10:07:00 +0000</pubDate><guid>https://xuanwo.org/2018/01/14/automation-based-on-aws-lambda/</guid><description>&lt;p&gt;在上一篇文章中我们介绍了 &lt;a href=&#34;https://xuanwo.org/2017/12/03/integromat-intro/&#34;&gt;Integrmat&lt;/a&gt; 这个自动化平台，但是在实际的应用当中，它还是有一些不太符合我们项目需求的地方。基于 AWS Lambda 实现的自动化工具就是我们找到的替代方案，接下来我会将阐述一下项目的需求，然后根据对项目的需求分析为什么 Integrmat 不适合以及基于 AWS Lambda 实现的好处在哪里。之后会介绍一下 AWS Lambda 是什么以及如何实现我们的自动化工具，并分享一些在实现自动化工具中遇到的一些坑。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description></item></channel></rss>